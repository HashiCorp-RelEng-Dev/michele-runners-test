name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write # for uploading release artifacts


env:
  GOPROXY: https://proxy.golang.org/

jobs:
  release:
    runs-on: [custom, ubuntu, small]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Read go version
        id: go-version
        run: |
          content=`cat ./.go-version`
          echo "::set-output name=content::$content"
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.go-version.outputs.content }}
      - name: Install hc-codesign
        run: |
          docker login docker.pkg.github.com -u docker -p '${{ secrets.CODESIGN_GITHUB_TOKEN }}' && \
          docker pull docker.pkg.github.com/hashicorp/hc-codesign/hc-codesign:$VERSION && \
          echo "::set-output name=image::docker.pkg.github.com/hashicorp/hc-codesign/hc-codesign:$VERSION"
        id: codesign
        env:
          VERSION: v0
        name: Release
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release
        env:
          CODESIGN_IMAGE: ${{ steps.codesign.outputs.image }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          CIRCLE_TOKEN: ${{ secrets.CIRCLE_TOKEN }}
   